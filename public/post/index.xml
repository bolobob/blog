<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 勉強ブログ</title>
    <link>http://bolobob.github.io/blog/post/</link>
    <description>Recent content in Posts on 勉強ブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Wed, 02 Mar 2016 00:25:58 +0900</lastBuildDate>
    <atom:link href="http://bolobob.github.io/blog/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>最初の投稿</title>
      <link>http://bolobob.github.io/blog/post/first/</link>
      <pubDate>Wed, 02 Mar 2016 00:25:58 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/first/</guid>
      <description>

&lt;h1 id=&#34;祝-初投稿&#34;&gt;祝・初投稿&lt;/h1&gt;

&lt;p&gt;これからブログを書いていく所存&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sketch4のリサイズ</title>
      <link>http://bolobob.github.io/blog/post/Sketch4%E3%81%AE%E3%83%AA%E3%82%B5%E3%82%A4%E3%82%B9%E3%82%99/</link>
      <pubDate>Mon, 07 Nov 2016 00:41:25 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/Sketch4%E3%81%AE%E3%83%AA%E3%82%B5%E3%82%A4%E3%82%B9%E3%82%99/</guid>
      <description>&lt;p&gt;しばらく触らないでいたら戸惑ったのでメモ&lt;/p&gt;

&lt;p&gt;ステータスバーを配置してリサイズしたら、こんな感じに、、、

&lt;figure &gt;
    
        &lt;img src=&#34;http://bolobob.github.io/blog/images/figure_0001.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;大きさが変わらない&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;リサイズの方法が４種類ある模様

&lt;figure &gt;
    
        &lt;img src=&#34;http://bolobob.github.io/blog/images/figure_0002.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;リサイズ設定&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;

こちらの設定にするとこんな感じに

&lt;figure &gt;
    
        &lt;img src=&#34;http://bolobob.github.io/blog/images/figure_0004.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;テキストのサイズが変わらない&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;次はテキストをアウトライン化すると

&lt;figure &gt;
    
        &lt;img src=&#34;http://bolobob.github.io/blog/images/figure_0003.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;意図通りのリサイズ&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ES2015のexportとimport</title>
      <link>http://bolobob.github.io/blog/post/ES2015%E3%81%AEexport%E3%81%A8import/</link>
      <pubDate>Wed, 12 Oct 2016 00:03:46 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/ES2015%E3%81%AEexport%E3%81%A8import/</guid>
      <description>

&lt;h2 id=&#34;なぜ必要&#34;&gt;なぜ必要？&lt;/h2&gt;

&lt;p&gt;これがあることでファイルの分割が可能となった。&lt;br&gt;
おかげで1つのファイルが巨大になることを避けられる。&lt;/p&gt;

&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Statements/import&#34;&gt;import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Statements/export&#34;&gt;export&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;##　使い方&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;export default function combineReducers(reducers) { ... }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;色々なimport, export の仕方がある。
それぞれどういった特徴、もしくは使わけをするのが良いのか？&lt;/p&gt;

&lt;h3 id=&#34;はどういったときに使う&#34;&gt;{&amp;hellip;}はどういったときに使う？&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;default&lt;/code&gt;を使わずに&lt;code&gt;export&lt;/code&gt;したものの場合に使う&lt;/p&gt;

&lt;h3 id=&#34;asはどういったときに使う&#34;&gt;asはどういったときに使う？&lt;/h3&gt;

&lt;p&gt;import, export ともに別名にしたいとき、、、つまり？
名前を短くしたいとか、名前が被らないようにとかかな、、、&lt;/p&gt;

&lt;h3 id=&#34;はどういったときに使う-1&#34;&gt;&lt;code&gt;*&lt;/code&gt;はどういったときに使う？&lt;/h3&gt;

&lt;p&gt;すべてをimport, exportしたいときか、、、
逆に言えば必要なものだけを対象にすることもできる&lt;/p&gt;

&lt;h3 id=&#34;exportでfromってどうやって使う&#34;&gt;exportでfromってどうやって使う？&lt;/h3&gt;

&lt;p&gt;c.jsがa.js,b.jsのモジュールを読み込む場合、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import * from &#39;a&#39;;
import * from &#39;b&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と書く必要があるが、
a.jsが&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export * from &#39;b&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と書いておけば&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import * from &#39;a&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;だけで済む。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Atomのオートインデント</title>
      <link>http://bolobob.github.io/blog/post/AtomAutoIndent/</link>
      <pubDate>Mon, 04 Jul 2016 22:48:41 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/AtomAutoIndent/</guid>
      <description>

&lt;h2 id=&#34;設定が反映されない&#34;&gt;設定が反映されない？&lt;/h2&gt;

&lt;h3 id=&#34;問題&#34;&gt;問題&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&#39;atom-text-editor&#39;:
  &#39;ctrl-i&#39;: &#39;unset!&#39;
  &#39;ctrl-i&#39;: &#39;editor:auto-indent&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として再起動しても反映されない、、、&lt;/p&gt;

&lt;h3 id=&#34;原因&#34;&gt;原因&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Settings &amp;gt; Keybindings&lt;/code&gt;で&lt;code&gt;ctrl-i&lt;/code&gt;を検索すると&lt;code&gt;Emmet&lt;/code&gt;パッケージと衝突してた。&lt;/p&gt;

&lt;h3 id=&#34;解決&#34;&gt;解決&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&#39;.platform-darwin atom-text-editor:not([mini])&#39;:
  &#39;ctrl-i&#39;: &#39;unset!&#39;
  &#39;ctrl-i&#39;: &#39;editor:auto-indent&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としたらうまくいった。&lt;/p&gt;

&lt;h3 id=&#34;余談&#34;&gt;余談&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;の&lt;code&gt;tags&lt;/code&gt;って文字列として書かないとダメなのか&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tags = [&amp;quot;Atom&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>記事削除</title>
      <link>http://bolobob.github.io/blog/post/%E8%A8%98%E4%BA%8B%E5%89%8A%E9%99%A4/</link>
      <pubDate>Mon, 04 Jul 2016 22:46:09 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/%E8%A8%98%E4%BA%8B%E5%89%8A%E9%99%A4/</guid>
      <description>

&lt;h2 id=&#34;xxx-mdを削除するなら&#34;&gt;xxx.mdを削除するなら&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;rm content/post/xxx.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;してビルドすればOK!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vagrant&#43;Laravelの環境設定</title>
      <link>http://bolobob.github.io/blog/post/Vagrant&#43;Laravel%E3%81%AE%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</link>
      <pubDate>Sun, 19 Jun 2016 10:31:05 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/Vagrant&#43;Laravel%E3%81%AE%E7%92%B0%E5%A2%83%E8%A8%AD%E5%AE%9A/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;vagrant on mac にLaravel Homesteadを入れてみる&#34;&gt;http://qiita.com/you-me/items/3886f072cbcbead98733&lt;/a&gt;を参考に。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd Homestead/
$ bash init.sh
Homestead initialized!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;init.sh&lt;/code&gt;は何をしてるかというと、&lt;code&gt;~/.homestead&lt;/code&gt;を作りその下に、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Homestead.yaml&lt;/li&gt;
&lt;li&gt;after.sh&lt;/li&gt;
&lt;li&gt;aliases&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;をコピーしてる。&lt;/p&gt;

&lt;h2 id=&#34;composerのインストール&#34;&gt;composerのインストール&lt;/h2&gt;

&lt;h3 id=&#34;homebrewでインストール&#34;&gt;Homebrewでインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;brew install composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;失敗するなー&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew tap homebrew/php/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;してから再度&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でうまくいった。&lt;/p&gt;

&lt;h4 id=&#34;参考&#34;&gt;参考&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.d-wood.com/blog/2015/12/17_7736.html&#34;&gt;[PHP] Homebrew で Composer をインストールする&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/saa/items/85ed5e914d424fbf9fd6&#34;&gt;brew tapとは&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;vagrant上で改修したくないな&#34;&gt;vagrant上で改修したくないな、、、&lt;/h2&gt;

&lt;p&gt;と思ったけど、ホストの&lt;code&gt;Code/Laravel/resources/views/welcome.blade.php&lt;/code&gt;
を編集したらうまく反映された。
どこで&lt;code&gt;Synced Folder&lt;/code&gt;の設定をしたのだ？
&lt;code&gt;scripts/homestead.rb&lt;/code&gt;に&lt;code&gt;synced_folder&lt;/code&gt;とあるからコレのおかげだろう、きっと&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tmux設定の覚書</title>
      <link>http://bolobob.github.io/blog/post/tmux%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%A6%9A%E6%9B%B8/</link>
      <pubDate>Sat, 18 Jun 2016 21:29:26 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/tmux%E8%A8%AD%E5%AE%9A%E3%81%AE%E8%A6%9A%E6%9B%B8/</guid>
      <description>

&lt;h2 id=&#34;反映方法その１&#34;&gt;反映方法その１&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://raichel.hatenablog.com/entry/2015/08/02/185018&#34;&gt;達人のtmux.confコピペしたら動かなかった話&lt;/a&gt;を参考に。
とりあえず&lt;code&gt;prefix&lt;/code&gt;を設定、反映しようとしたがどうやればいいか分からない。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ps aux | head -1 &amp;amp;&amp;amp; ps aux | grep tmux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とすると、プロセスが生きてたので&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;kill -9 [該当プロセスID]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;として&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tmux
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;したら設定が反映された。&lt;/p&gt;

&lt;h3 id=&#34;反映方法その２&#34;&gt;反映方法その２&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;bind r source-file ~/.tmux.conf \; display &amp;quot;Reloaded!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を設定すると&lt;code&gt;c-t r&lt;/code&gt;で反映されるように、、、
&lt;code&gt;c-t&lt;/code&gt;の&lt;code&gt;t&lt;/code&gt;はプリフィックスなので自身の設定にあわせて変える必要あり。
デフォルトは&lt;code&gt;b&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;文法エラーがあると反映されないっぽい、、、って当然か&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setw -g window-status-current-bg orange
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;どうやら&lt;code&gt;orange&lt;/code&gt;は無いみたいで、、、&lt;/p&gt;

&lt;h2 id=&#34;余談&#34;&gt;余談&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;hugo&lt;/code&gt;のプレビューができないと思ったら&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としてた、&lt;code&gt;.md&lt;/code&gt;をつけないといけなかった&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new post/xxx.md
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>WEB&#43;DB86_React</title>
      <link>http://bolobob.github.io/blog/post/WEB&#43;DB86_React/</link>
      <pubDate>Sun, 15 May 2016 13:50:40 +0900</pubDate>
      
      <guid>http://bolobob.github.io/blog/post/WEB&#43;DB86_React/</guid>
      <description>

&lt;h2 id=&#34;web-db-vol-86-reactによるフロントエンド開発の変革&#34;&gt;WEB+DB vol.86 Reactによるフロントエンド開発の変革&lt;/h2&gt;

&lt;p&gt;JSXTransformer.jsとreact-toolsはどうやら廃止された模様
&lt;a href=&#34;https://facebook.github.io/react/blog/2015/06/12/deprecating-jstransform-and-react-tools.html&#34;&gt;https://facebook.github.io/react/blog/2015/06/12/deprecating-jstransform-and-react-tools.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;ということで、Babelでやってみる。
Babelはインストール済みだった。
自動トランスパイルされないのは面倒なので&lt;code&gt;gulp&lt;/code&gt;をインストール。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install -g gulp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;は成功、しかし&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install --save-dev gulp-babel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;でエラーになる。
タスクランナーは今回の勉強範囲とは違うのでいったんスルー。&lt;/p&gt;

&lt;h2 id=&#34;babelが実行エラーになる&#34;&gt;Babelが実行エラーになる&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;babel app.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としてもエラーになる。
実行できるディレクトリーとくらべてみると&lt;code&gt;.babelrc&lt;/code&gt;が無いことに気づく。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;presets&amp;quot;: [&amp;quot;es2015&amp;quot;]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を配置すると、実行成功する。&lt;/p&gt;

&lt;h2 id=&#34;babelが実行エラーになる-jsx編&#34;&gt;Babelが実行エラーになる「jsx編」&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://babeljs.io/docs/plugins/transform-react-jsx/&#34;&gt;https://babeljs.io/docs/plugins/transform-react-jsx/&lt;/a&gt;
これが必要なのか？ということでインストール。
&lt;code&gt;.babelrc&lt;/code&gt;に&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;plugins&amp;quot;: [&amp;quot;transform-react-jsx&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を追加。
トランスパイル成功！&lt;/p&gt;

&lt;h2 id=&#34;jsエラーになる&#34;&gt;jsエラーになる&lt;/h2&gt;

&lt;p&gt;どうやら&lt;code&gt;react-dom.js&lt;/code&gt;も読み込んで、さらに&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;React.render
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;となっているところを&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ReactDOM.render
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;としないとダメな模様。
１年以上経ってるので仕様変更があったみたい。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>